//@splitted
//@noenv
type MainRegion_Trace : { __Inactive__, _0 }
type InOutCycleRegion_Trace : { __Inactive__, InOutCycleState }
type OutputRegion_Trace : { __Inactive__, OutputState, FirstOutputState }
type InputRegion_Trace : { __Inactive__, InputState }
type TraceLogs : { None, Initial____0, InputInitialState___InputState, OutputInitialState___FirstOutputState, InOutCycleInitialState___InOutCycleState, Entry__0, Entry_InputState, Entry_OutputState, Entry_FirstOutputState, Entry_InOutCycleState, Exit_InputState, InputState___InputState, Entry_InputState, Exit_InputState, InputState___InputState, Entry_InputState, Exit_InputState, InputState___InputState, Entry_InputState, Exit_InputState, InputState___InputState, Entry_InputState, Exit_InputState, InputState___InputState, Entry_InputState, Exit_InputState, InputState___InputState, Entry_InputState, Exit_InOutCycleState, InOutCycleState___InOutCycleState, Entry_InOutCycleState }
type Main_SC : { __Inactive__, Wait, S1, Error, FS1 }
type SCLogs : { None, Initial___Wait, Entry_Wait, Entry_S1, Entry_Error, Entry_FS1, Exit_S1, S1___FS1, Entry_FS1, Exit_Wait, Wait___S1, Entry_S1, Exit_S1, S1___Error, Entry_Error }
type ActivityNodeState : { __Idle__, __Running__, __Done__ }
type FlowState : { __Empty__, __Full__ }
var _control__anotherSignal_Out_Trace_Trace : boolean = false
var _control__integerData_Out_Trace_Trace : boolean = false
 var _control__integerData_Out_value_Trace_Trace : integer = 0
var _control__continue_Out_Trace_Trace : boolean = false
var control_integerData_In_Trace_Trace : boolean = false
 var control_integerData_In_value_Trace_Trace : integer = 0
var _control__pending_Out_Trace_Trace : boolean = false
var control_continue_In_Trace_Trace : boolean = false
var _testControl__start_Out_Trace_Trace : boolean = false
var control_data_In_Trace_Trace : boolean = false
 var control_data_In_value_Trace_Trace : boolean = false
var _control__data_Out_Trace_Trace : boolean = false
 var _control__data_Out_value_Trace_Trace : boolean = false
var testControl_start_In_Trace_Trace : boolean = false
var control_pending_In_Trace_Trace : boolean = false
var control_anotherSignal_In_Trace_Trace : boolean = false
ctrl var mainRegion_Trace_Trace : MainRegion_Trace = __Inactive__
ctrl var inOutCycleRegion_Trace_Trace : InOutCycleRegion_Trace = __Inactive__
ctrl var outputRegion_Trace_Trace : OutputRegion_Trace = __Inactive__
ctrl var inputRegion_Trace_Trace : InputRegion_Trace = __Inactive__
var inOutCycleVariable_Trace_Trace : boolean = false
var logs_Trace_Trace : TraceLogs = None
var testControl_start_In_sCSystem_sc_SC : boolean = false
var doActivityController_control_Out_sCSystem_sc_SC : boolean = false
var doActivityController_control_Out_isActive_sCSystem_sc_SC : boolean = false
var doActivityController_done_In_sCSystem_sc_SC : boolean = false
var control_anotherSignal_In_sCSystem_sc_SC : boolean = false
ctrl var main_sCSystem_sc_SC : Main_SC = __Inactive__
var logs_sCSystem_sc_SC : SCLogs = None
var controller_control_In : boolean = false
var controller_control_In_isActive : boolean = false
var controller_done_Out : boolean = false
ctrl var DoActivity : ActivityNodeState = __Idle__
ctrl var fin : ActivityNodeState = __Idle__
ctrl var end : ActivityNodeState = __Idle__
ctrl var init : ActivityNodeState = __Idle__
ctrl var end_to_fin : FlowState = __Empty__
ctrl var init_to_end : FlowState = __Empty__
var master_TraceMessageQueueOfTrace : integer
ctrl var sizeMasterTraceMessageQueueOfTrace : integer
var slave_control_valueOfTrace : integer
ctrl var sizeSlaveValueControlOfTrace : integer
var slave_control_valueOfTrace : boolean
ctrl var sizeSlaveValueControlOfTrace : integer
var master_SCMessageQueueOfsCSystem_sc : [integer] -> integer
ctrl var sizeMasterSCMessageQueueOfsCSystem_sc : integer
var master_controllerMessagesOfsCSystem_act : integer
ctrl var sizeMasterControllerMessagesOfsCSystem_act : integer
var __pc : integer = 0
var __trans : boolean = false
var eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 : integer = master_SCMessageQueueOfsCSystem_sc[0]
var eventId_master_TraceMessageQueueOfTrace_1047319546 : integer = master_TraceMessageQueueOfTrace
var eventId_master_TraceMessageQueueOfTrace_10473195460 : integer = master_TraceMessageQueueOfTrace
var eventId_master_TraceMessageQueueOfTrace_10473195461 : integer

trans {
	assume ((__trans == true) && (__pc == 0));
	__pc := (if (0 < sizeMasterTraceMessageQueueOfTrace) then 2 else 1);
} or {
	assume ((__trans == true) && (__pc == 2));
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	master_TraceMessageQueueOfTrace := 0;
	sizeMasterTraceMessageQueueOfTrace := (sizeMasterTraceMessageQueueOfTrace - 1);
	__pc := 3;
} or {
	assume ((__trans == true) && (__pc == 3));
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 0);
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 3));
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 1);
	testControl_start_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 4;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 6;
} or {
	assume ((__trans == true) && (__pc == 6));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 8 else 7);
} or {
	assume ((__trans == true) && (__pc == 8));
	logs_Trace_Trace := Exit_InputState;
	__pc := 7;
} or {
	assume ((__trans == true) && (__pc == 7));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 9;
} or {
	assume ((__trans == true) && (__pc == 9));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 11 else 10);
} or {
	assume ((__trans == true) && (__pc == 11));
	logs_Trace_Trace := Exit_InputState;
	__pc := 10;
} or {
	assume ((__trans == true) && (__pc == 10));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 12;
} or {
	assume ((__trans == true) && (__pc == 12));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 14 else 13);
} or {
	assume ((__trans == true) && (__pc == 14));
	logs_Trace_Trace := Exit_InputState;
	__pc := 13;
} or {
	assume ((__trans == true) && (__pc == 13));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 15;
} or {
	assume ((__trans == true) && (__pc == 15));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 17 else 16);
} or {
	assume ((__trans == true) && (__pc == 17));
	logs_Trace_Trace := Exit_InputState;
	__pc := 16;
} or {
	assume ((__trans == true) && (__pc == 16));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 18;
} or {
	assume ((__trans == true) && (__pc == 18));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 20 else 19);
} or {
	assume ((__trans == true) && (__pc == 20));
	logs_Trace_Trace := Exit_InputState;
	__pc := 19;
} or {
	assume ((__trans == true) && (__pc == 19));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 21;
} or {
	assume ((__trans == true) && (__pc == 21));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 23 else 22);
} or {
	assume ((__trans == true) && (__pc == 23));
	logs_Trace_Trace := Exit_InputState;
	__pc := 22;
} or {
	assume ((__trans == true) && (__pc == 22));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 4));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 5;
} or {
	assume ((__trans == true) && (__pc == 5));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 25 else 24);
} or {
	assume ((__trans == true) && (__pc == 25));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 27 else 26);
} or {
	assume ((__trans == true) && (__pc == 27));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 26;
} or {
	assume ((__trans == true) && (__pc == 26));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 24;
} or {
	assume ((__trans == true) && (__pc == 24));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 3));
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 2);
	control_continue_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 28;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 30;
} or {
	assume ((__trans == true) && (__pc == 30));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 32 else 31);
} or {
	assume ((__trans == true) && (__pc == 32));
	logs_Trace_Trace := Exit_InputState;
	__pc := 31;
} or {
	assume ((__trans == true) && (__pc == 31));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 33;
} or {
	assume ((__trans == true) && (__pc == 33));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 35 else 34);
} or {
	assume ((__trans == true) && (__pc == 35));
	logs_Trace_Trace := Exit_InputState;
	__pc := 34;
} or {
	assume ((__trans == true) && (__pc == 34));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 36;
} or {
	assume ((__trans == true) && (__pc == 36));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 38 else 37);
} or {
	assume ((__trans == true) && (__pc == 38));
	logs_Trace_Trace := Exit_InputState;
	__pc := 37;
} or {
	assume ((__trans == true) && (__pc == 37));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 39;
} or {
	assume ((__trans == true) && (__pc == 39));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 41 else 40);
} or {
	assume ((__trans == true) && (__pc == 41));
	logs_Trace_Trace := Exit_InputState;
	__pc := 40;
} or {
	assume ((__trans == true) && (__pc == 40));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 42;
} or {
	assume ((__trans == true) && (__pc == 42));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 44 else 43);
} or {
	assume ((__trans == true) && (__pc == 44));
	logs_Trace_Trace := Exit_InputState;
	__pc := 43;
} or {
	assume ((__trans == true) && (__pc == 43));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 45;
} or {
	assume ((__trans == true) && (__pc == 45));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 47 else 46);
} or {
	assume ((__trans == true) && (__pc == 47));
	logs_Trace_Trace := Exit_InputState;
	__pc := 46;
} or {
	assume ((__trans == true) && (__pc == 46));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 28));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 29;
} or {
	assume ((__trans == true) && (__pc == 29));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 49 else 48);
} or {
	assume ((__trans == true) && (__pc == 49));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 51 else 50);
} or {
	assume ((__trans == true) && (__pc == 51));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 50;
} or {
	assume ((__trans == true) && (__pc == 50));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 48;
} or {
	assume ((__trans == true) && (__pc == 48));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 3));
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 3);
	control_anotherSignal_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 52;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 54;
} or {
	assume ((__trans == true) && (__pc == 54));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 56 else 55);
} or {
	assume ((__trans == true) && (__pc == 56));
	logs_Trace_Trace := Exit_InputState;
	__pc := 55;
} or {
	assume ((__trans == true) && (__pc == 55));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 57;
} or {
	assume ((__trans == true) && (__pc == 57));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 59 else 58);
} or {
	assume ((__trans == true) && (__pc == 59));
	logs_Trace_Trace := Exit_InputState;
	__pc := 58;
} or {
	assume ((__trans == true) && (__pc == 58));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 60;
} or {
	assume ((__trans == true) && (__pc == 60));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 62 else 61);
} or {
	assume ((__trans == true) && (__pc == 62));
	logs_Trace_Trace := Exit_InputState;
	__pc := 61;
} or {
	assume ((__trans == true) && (__pc == 61));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 63;
} or {
	assume ((__trans == true) && (__pc == 63));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 65 else 64);
} or {
	assume ((__trans == true) && (__pc == 65));
	logs_Trace_Trace := Exit_InputState;
	__pc := 64;
} or {
	assume ((__trans == true) && (__pc == 64));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 66;
} or {
	assume ((__trans == true) && (__pc == 66));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 68 else 67);
} or {
	assume ((__trans == true) && (__pc == 68));
	logs_Trace_Trace := Exit_InputState;
	__pc := 67;
} or {
	assume ((__trans == true) && (__pc == 67));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 69;
} or {
	assume ((__trans == true) && (__pc == 69));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 71 else 70);
} or {
	assume ((__trans == true) && (__pc == 71));
	logs_Trace_Trace := Exit_InputState;
	__pc := 70;
} or {
	assume ((__trans == true) && (__pc == 70));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 52));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 53;
} or {
	assume ((__trans == true) && (__pc == 53));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 73 else 72);
} or {
	assume ((__trans == true) && (__pc == 73));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 75 else 74);
} or {
	assume ((__trans == true) && (__pc == 75));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 74;
} or {
	assume ((__trans == true) && (__pc == 74));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 72;
} or {
	assume ((__trans == true) && (__pc == 72));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 3));
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 4);
	control_pending_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 76;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 78;
} or {
	assume ((__trans == true) && (__pc == 78));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 80 else 79);
} or {
	assume ((__trans == true) && (__pc == 80));
	logs_Trace_Trace := Exit_InputState;
	__pc := 79;
} or {
	assume ((__trans == true) && (__pc == 79));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 81;
} or {
	assume ((__trans == true) && (__pc == 81));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 83 else 82);
} or {
	assume ((__trans == true) && (__pc == 83));
	logs_Trace_Trace := Exit_InputState;
	__pc := 82;
} or {
	assume ((__trans == true) && (__pc == 82));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 84;
} or {
	assume ((__trans == true) && (__pc == 84));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 86 else 85);
} or {
	assume ((__trans == true) && (__pc == 86));
	logs_Trace_Trace := Exit_InputState;
	__pc := 85;
} or {
	assume ((__trans == true) && (__pc == 85));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 87;
} or {
	assume ((__trans == true) && (__pc == 87));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 89 else 88);
} or {
	assume ((__trans == true) && (__pc == 89));
	logs_Trace_Trace := Exit_InputState;
	__pc := 88;
} or {
	assume ((__trans == true) && (__pc == 88));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 90;
} or {
	assume ((__trans == true) && (__pc == 90));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 92 else 91);
} or {
	assume ((__trans == true) && (__pc == 92));
	logs_Trace_Trace := Exit_InputState;
	__pc := 91;
} or {
	assume ((__trans == true) && (__pc == 91));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 93;
} or {
	assume ((__trans == true) && (__pc == 93));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 95 else 94);
} or {
	assume ((__trans == true) && (__pc == 95));
	logs_Trace_Trace := Exit_InputState;
	__pc := 94;
} or {
	assume ((__trans == true) && (__pc == 94));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 76));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 77;
} or {
	assume ((__trans == true) && (__pc == 77));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 97 else 96);
} or {
	assume ((__trans == true) && (__pc == 97));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 99 else 98);
} or {
	assume ((__trans == true) && (__pc == 99));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 98;
} or {
	assume ((__trans == true) && (__pc == 98));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 96;
} or {
	assume ((__trans == true) && (__pc == 96));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 3));
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 5);
	control_data_In_Trace_Trace := true;
	control_data_In_value_Trace_Trace := slave_control_valueOfTrace;
	slave_control_valueOfTrace := false;
	sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace - 1);
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 100;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 102;
} or {
	assume ((__trans == true) && (__pc == 102));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 104 else 103);
} or {
	assume ((__trans == true) && (__pc == 104));
	logs_Trace_Trace := Exit_InputState;
	__pc := 103;
} or {
	assume ((__trans == true) && (__pc == 103));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 105;
} or {
	assume ((__trans == true) && (__pc == 105));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 107 else 106);
} or {
	assume ((__trans == true) && (__pc == 107));
	logs_Trace_Trace := Exit_InputState;
	__pc := 106;
} or {
	assume ((__trans == true) && (__pc == 106));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 108;
} or {
	assume ((__trans == true) && (__pc == 108));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 110 else 109);
} or {
	assume ((__trans == true) && (__pc == 110));
	logs_Trace_Trace := Exit_InputState;
	__pc := 109;
} or {
	assume ((__trans == true) && (__pc == 109));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 111;
} or {
	assume ((__trans == true) && (__pc == 111));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 113 else 112);
} or {
	assume ((__trans == true) && (__pc == 113));
	logs_Trace_Trace := Exit_InputState;
	__pc := 112;
} or {
	assume ((__trans == true) && (__pc == 112));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 114;
} or {
	assume ((__trans == true) && (__pc == 114));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 116 else 115);
} or {
	assume ((__trans == true) && (__pc == 116));
	logs_Trace_Trace := Exit_InputState;
	__pc := 115;
} or {
	assume ((__trans == true) && (__pc == 115));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 117;
} or {
	assume ((__trans == true) && (__pc == 117));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 119 else 118);
} or {
	assume ((__trans == true) && (__pc == 119));
	logs_Trace_Trace := Exit_InputState;
	__pc := 118;
} or {
	assume ((__trans == true) && (__pc == 118));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 100));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 101;
} or {
	assume ((__trans == true) && (__pc == 101));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 121 else 120);
} or {
	assume ((__trans == true) && (__pc == 121));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 123 else 122);
} or {
	assume ((__trans == true) && (__pc == 123));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 122;
} or {
	assume ((__trans == true) && (__pc == 122));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 120;
} or {
	assume ((__trans == true) && (__pc == 120));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 3));
	assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 6);
	control_integerData_In_Trace_Trace := true;
	control_integerData_In_value_Trace_Trace := slave_control_valueOfTrace;
	slave_control_valueOfTrace := 0;
	sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace - 1);
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 124;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 126;
} or {
	assume ((__trans == true) && (__pc == 126));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 128 else 127);
} or {
	assume ((__trans == true) && (__pc == 128));
	logs_Trace_Trace := Exit_InputState;
	__pc := 127;
} or {
	assume ((__trans == true) && (__pc == 127));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 129;
} or {
	assume ((__trans == true) && (__pc == 129));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 131 else 130);
} or {
	assume ((__trans == true) && (__pc == 131));
	logs_Trace_Trace := Exit_InputState;
	__pc := 130;
} or {
	assume ((__trans == true) && (__pc == 130));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 132;
} or {
	assume ((__trans == true) && (__pc == 132));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 134 else 133);
} or {
	assume ((__trans == true) && (__pc == 134));
	logs_Trace_Trace := Exit_InputState;
	__pc := 133;
} or {
	assume ((__trans == true) && (__pc == 133));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 135;
} or {
	assume ((__trans == true) && (__pc == 135));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 137 else 136);
} or {
	assume ((__trans == true) && (__pc == 137));
	logs_Trace_Trace := Exit_InputState;
	__pc := 136;
} or {
	assume ((__trans == true) && (__pc == 136));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 138;
} or {
	assume ((__trans == true) && (__pc == 138));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 140 else 139);
} or {
	assume ((__trans == true) && (__pc == 140));
	logs_Trace_Trace := Exit_InputState;
	__pc := 139;
} or {
	assume ((__trans == true) && (__pc == 139));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 141;
} or {
	assume ((__trans == true) && (__pc == 141));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 143 else 142);
} or {
	assume ((__trans == true) && (__pc == 143));
	logs_Trace_Trace := Exit_InputState;
	__pc := 142;
} or {
	assume ((__trans == true) && (__pc == 142));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 124));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 125;
} or {
	assume ((__trans == true) && (__pc == 125));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 145 else 144);
} or {
	assume ((__trans == true) && (__pc == 145));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 147 else 146);
} or {
	assume ((__trans == true) && (__pc == 147));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 146;
} or {
	assume ((__trans == true) && (__pc == 146));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 144;
} or {
	assume ((__trans == true) && (__pc == 144));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_1047319546 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 1;
} or {
	assume ((__trans == true) && (__pc == 1));
	__pc := (if _testControl__start_Out_Trace_Trace then 149 else 148);
} or {
	assume ((__trans == true) && (__pc == 149));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 151 else 150);
} or {
	assume ((__trans == true) && (__pc == 151));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 1;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 150;
} or {
	assume ((__trans == true) && (__pc == 150));
	_testControl__start_Out_Trace_Trace := false;
	__pc := 148;
} or {
	assume ((__trans == true) && (__pc == 148));
	__pc := (if _control__continue_Out_Trace_Trace then 153 else 152);
} or {
	assume ((__trans == true) && (__pc == 153));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 155 else 154);
} or {
	assume ((__trans == true) && (__pc == 155));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 2;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 154;
} or {
	assume ((__trans == true) && (__pc == 154));
	_control__continue_Out_Trace_Trace := false;
	__pc := 152;
} or {
	assume ((__trans == true) && (__pc == 152));
	__pc := (if _control__anotherSignal_Out_Trace_Trace then 157 else 156);
} or {
	assume ((__trans == true) && (__pc == 157));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 159 else 158);
} or {
	assume ((__trans == true) && (__pc == 159));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 3;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 158;
} or {
	assume ((__trans == true) && (__pc == 158));
	_control__anotherSignal_Out_Trace_Trace := false;
	__pc := 156;
} or {
	assume ((__trans == true) && (__pc == 156));
	__pc := (if _control__pending_Out_Trace_Trace then 161 else 160);
} or {
	assume ((__trans == true) && (__pc == 161));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 163 else 162);
} or {
	assume ((__trans == true) && (__pc == 163));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 4;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 162;
} or {
	assume ((__trans == true) && (__pc == 162));
	_control__pending_Out_Trace_Trace := false;
	__pc := 160;
} or {
	assume ((__trans == true) && (__pc == 160));
	__pc := (if _control__data_Out_Trace_Trace then 165 else 164);
} or {
	assume ((__trans == true) && (__pc == 165));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 167 else 166);
} or {
	assume ((__trans == true) && (__pc == 167));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 5;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 166;
} or {
	assume ((__trans == true) && (__pc == 166));
	_control__data_Out_Trace_Trace := false;
	__pc := 164;
} or {
	assume ((__trans == true) && (__pc == 164));
	__pc := (if _control__integerData_Out_Trace_Trace then 169 else 168);
} or {
	assume ((__trans == true) && (__pc == 169));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 171 else 170);
} or {
	assume ((__trans == true) && (__pc == 171));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 6;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 170;
} or {
	assume ((__trans == true) && (__pc == 170));
	_control__integerData_Out_Trace_Trace := false;
	__pc := 168;
} or {
	assume ((__trans == true) && (__pc == 168));
	__pc := (if (0 < sizeMasterSCMessageQueueOfsCSystem_sc) then 173 else 172);
} or {
	assume ((__trans == true) && (__pc == 173));
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	master_SCMessageQueueOfsCSystem_sc := [0 <- master_SCMessageQueueOfsCSystem_sc[1], 1 <- master_SCMessageQueueOfsCSystem_sc[2], 2 <- master_SCMessageQueueOfsCSystem_sc[3], 3 <- 0, default <- 0];
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc - 1);
	__pc := 174;
} or {
	assume ((__trans == true) && (__pc == 174));
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 0);
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 1);
	testControl_start_In_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 175;
} or {
	assume ((__trans == true) && (__pc == 175));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 177 else 176);
} or {
	assume ((__trans == true) && (__pc == 177));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 178;
} or {
	assume ((__trans == true) && (__pc == 178));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 180 else 179);
} or {
	assume ((__trans == true) && (__pc == 180));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 179;
} or {
	assume ((__trans == true) && (__pc == 179));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 176;
} or {
	assume ((__trans == true) && (__pc == 177));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 181;
} or {
	assume ((__trans == true) && (__pc == 181));
	__pc := (if (main_sCSystem_sc_SC == S1) then 183 else 182);
} or {
	assume ((__trans == true) && (__pc == 183));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 182;
} or {
	assume ((__trans == true) && (__pc == 182));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 176;
} or {
	assume ((__trans == true) && (__pc == 177));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 184;
} or {
	assume ((__trans == true) && (__pc == 184));
	__pc := (if (main_sCSystem_sc_SC == S1) then 186 else 185);
} or {
	assume ((__trans == true) && (__pc == 186));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 185;
} or {
	assume ((__trans == true) && (__pc == 185));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 176;
} or {
	assume ((__trans == true) && (__pc == 177));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 176;
} or {
	assume ((__trans == true) && (__pc == 176));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 2);
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 187;
} or {
	assume ((__trans == true) && (__pc == 187));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 189 else 188);
} or {
	assume ((__trans == true) && (__pc == 189));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 190;
} or {
	assume ((__trans == true) && (__pc == 190));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 192 else 191);
} or {
	assume ((__trans == true) && (__pc == 192));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 191;
} or {
	assume ((__trans == true) && (__pc == 191));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 188;
} or {
	assume ((__trans == true) && (__pc == 189));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 193;
} or {
	assume ((__trans == true) && (__pc == 193));
	__pc := (if (main_sCSystem_sc_SC == S1) then 195 else 194);
} or {
	assume ((__trans == true) && (__pc == 195));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 194;
} or {
	assume ((__trans == true) && (__pc == 194));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 188;
} or {
	assume ((__trans == true) && (__pc == 189));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 196;
} or {
	assume ((__trans == true) && (__pc == 196));
	__pc := (if (main_sCSystem_sc_SC == S1) then 198 else 197);
} or {
	assume ((__trans == true) && (__pc == 198));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 197;
} or {
	assume ((__trans == true) && (__pc == 197));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 188;
} or {
	assume ((__trans == true) && (__pc == 189));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 188;
} or {
	assume ((__trans == true) && (__pc == 188));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 3);
	control_anotherSignal_In_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 199;
} or {
	assume ((__trans == true) && (__pc == 199));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 201 else 200);
} or {
	assume ((__trans == true) && (__pc == 201));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 202;
} or {
	assume ((__trans == true) && (__pc == 202));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 204 else 203);
} or {
	assume ((__trans == true) && (__pc == 204));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 203;
} or {
	assume ((__trans == true) && (__pc == 203));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 200;
} or {
	assume ((__trans == true) && (__pc == 201));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 205;
} or {
	assume ((__trans == true) && (__pc == 205));
	__pc := (if (main_sCSystem_sc_SC == S1) then 207 else 206);
} or {
	assume ((__trans == true) && (__pc == 207));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 206;
} or {
	assume ((__trans == true) && (__pc == 206));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 200;
} or {
	assume ((__trans == true) && (__pc == 201));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 208;
} or {
	assume ((__trans == true) && (__pc == 208));
	__pc := (if (main_sCSystem_sc_SC == S1) then 210 else 209);
} or {
	assume ((__trans == true) && (__pc == 210));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 209;
} or {
	assume ((__trans == true) && (__pc == 209));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 200;
} or {
	assume ((__trans == true) && (__pc == 201));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 200;
} or {
	assume ((__trans == true) && (__pc == 200));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 4);
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 211;
} or {
	assume ((__trans == true) && (__pc == 211));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 213 else 212);
} or {
	assume ((__trans == true) && (__pc == 213));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 214;
} or {
	assume ((__trans == true) && (__pc == 214));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 216 else 215);
} or {
	assume ((__trans == true) && (__pc == 216));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 215;
} or {
	assume ((__trans == true) && (__pc == 215));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 212;
} or {
	assume ((__trans == true) && (__pc == 213));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 217;
} or {
	assume ((__trans == true) && (__pc == 217));
	__pc := (if (main_sCSystem_sc_SC == S1) then 219 else 218);
} or {
	assume ((__trans == true) && (__pc == 219));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 218;
} or {
	assume ((__trans == true) && (__pc == 218));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 212;
} or {
	assume ((__trans == true) && (__pc == 213));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 220;
} or {
	assume ((__trans == true) && (__pc == 220));
	__pc := (if (main_sCSystem_sc_SC == S1) then 222 else 221);
} or {
	assume ((__trans == true) && (__pc == 222));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 221;
} or {
	assume ((__trans == true) && (__pc == 221));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 212;
} or {
	assume ((__trans == true) && (__pc == 213));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 212;
} or {
	assume ((__trans == true) && (__pc == 212));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 5);
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 223;
} or {
	assume ((__trans == true) && (__pc == 223));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 225 else 224);
} or {
	assume ((__trans == true) && (__pc == 225));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 226;
} or {
	assume ((__trans == true) && (__pc == 226));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 228 else 227);
} or {
	assume ((__trans == true) && (__pc == 228));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 227;
} or {
	assume ((__trans == true) && (__pc == 227));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 224;
} or {
	assume ((__trans == true) && (__pc == 225));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 229;
} or {
	assume ((__trans == true) && (__pc == 229));
	__pc := (if (main_sCSystem_sc_SC == S1) then 231 else 230);
} or {
	assume ((__trans == true) && (__pc == 231));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 230;
} or {
	assume ((__trans == true) && (__pc == 230));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 224;
} or {
	assume ((__trans == true) && (__pc == 225));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 232;
} or {
	assume ((__trans == true) && (__pc == 232));
	__pc := (if (main_sCSystem_sc_SC == S1) then 234 else 233);
} or {
	assume ((__trans == true) && (__pc == 234));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 233;
} or {
	assume ((__trans == true) && (__pc == 233));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 224;
} or {
	assume ((__trans == true) && (__pc == 225));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 224;
} or {
	assume ((__trans == true) && (__pc == 224));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 6);
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 235;
} or {
	assume ((__trans == true) && (__pc == 235));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 237 else 236);
} or {
	assume ((__trans == true) && (__pc == 237));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 238;
} or {
	assume ((__trans == true) && (__pc == 238));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 240 else 239);
} or {
	assume ((__trans == true) && (__pc == 240));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 239;
} or {
	assume ((__trans == true) && (__pc == 239));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 236;
} or {
	assume ((__trans == true) && (__pc == 237));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 241;
} or {
	assume ((__trans == true) && (__pc == 241));
	__pc := (if (main_sCSystem_sc_SC == S1) then 243 else 242);
} or {
	assume ((__trans == true) && (__pc == 243));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 242;
} or {
	assume ((__trans == true) && (__pc == 242));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 236;
} or {
	assume ((__trans == true) && (__pc == 237));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 244;
} or {
	assume ((__trans == true) && (__pc == 244));
	__pc := (if (main_sCSystem_sc_SC == S1) then 246 else 245);
} or {
	assume ((__trans == true) && (__pc == 246));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 245;
} or {
	assume ((__trans == true) && (__pc == 245));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 236;
} or {
	assume ((__trans == true) && (__pc == 237));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 236;
} or {
	assume ((__trans == true) && (__pc == 236));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 174));
	assume (eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 == 7);
	doActivityController_done_In_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 247;
} or {
	assume ((__trans == true) && (__pc == 247));
	__pc := (if (((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC)) then 249 else 248);
} or {
	assume ((__trans == true) && (__pc == 249));
	assume ((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC);
	__pc := 250;
} or {
	assume ((__trans == true) && (__pc == 250));
	__pc := (if (main_sCSystem_sc_SC == Wait) then 252 else 251);
} or {
	assume ((__trans == true) && (__pc == 252));
	logs_sCSystem_sc_SC := Exit_Wait;
	__pc := 251;
} or {
	assume ((__trans == true) && (__pc == 251));
	main_sCSystem_sc_SC := S1;
	logs_sCSystem_sc_SC := Entry_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 248;
} or {
	assume ((__trans == true) && (__pc == 249));
	assume ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC);
	__pc := 253;
} or {
	assume ((__trans == true) && (__pc == 253));
	__pc := (if (main_sCSystem_sc_SC == S1) then 255 else 254);
} or {
	assume ((__trans == true) && (__pc == 255));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 254;
} or {
	assume ((__trans == true) && (__pc == 254));
	main_sCSystem_sc_SC := Error;
	logs_sCSystem_sc_SC := Entry_Error;
	__pc := 248;
} or {
	assume ((__trans == true) && (__pc == 249));
	assume ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC);
	__pc := 256;
} or {
	assume ((__trans == true) && (__pc == 256));
	__pc := (if (main_sCSystem_sc_SC == S1) then 258 else 257);
} or {
	assume ((__trans == true) && (__pc == 258));
	logs_sCSystem_sc_SC := Exit_S1;
	doActivityController_control_Out_isActive_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := true;
	__pc := 257;
} or {
	assume ((__trans == true) && (__pc == 257));
	main_sCSystem_sc_SC := FS1;
	logs_sCSystem_sc_SC := Entry_FS1;
	__pc := 248;
} or {
	assume ((__trans == true) && (__pc == 249));
	assume (!((((main_sCSystem_sc_SC == Wait) && testControl_start_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && doActivityController_done_In_sCSystem_sc_SC) || ((main_sCSystem_sc_SC == S1) && control_anotherSignal_In_sCSystem_sc_SC))));
	__pc := 248;
} or {
	assume ((__trans == true) && (__pc == 248));
	doActivityController_done_In_sCSystem_sc_SC := false;
	testControl_start_In_sCSystem_sc_SC := false;
	eventId_master_SCMessageQueueOfsCSystem_sc_1696703945 := master_SCMessageQueueOfsCSystem_sc[0];
	control_anotherSignal_In_sCSystem_sc_SC := false;
	__pc := 172;
} or {
	assume ((__trans == true) && (__pc == 172));
	__pc := (if doActivityController_control_Out_sCSystem_sc_SC then 260 else 259);
} or {
	assume ((__trans == true) && (__pc == 260));
	__pc := (if (sizeMasterControllerMessagesOfsCSystem_act < 1) then 262 else 261);
} or {
	assume ((__trans == true) && (__pc == 262));
	master_controllerMessagesOfsCSystem_act := 1;
	sizeMasterControllerMessagesOfsCSystem_act := (sizeMasterControllerMessagesOfsCSystem_act + 1);
	__pc := 261;
} or {
	assume ((__trans == true) && (__pc == 261));
	doActivityController_control_Out_sCSystem_sc_SC := false;
	__pc := 259;
} or {
	assume ((__trans == true) && (__pc == 259));
	__pc := (if (0 < sizeMasterControllerMessagesOfsCSystem_act) then 264 else 263);
} or {
	assume ((__trans == true) && (__pc == 264));
	local var eventId_master_controllerMessagesOfsCSystem_act_902505664 : integer = master_controllerMessagesOfsCSystem_act;
	master_controllerMessagesOfsCSystem_act := 0;
	sizeMasterControllerMessagesOfsCSystem_act := (sizeMasterControllerMessagesOfsCSystem_act - 1);
	__pc := 265;
} or {
	assume ((__trans == true) && (__pc == 265));
	assume (eventId_master_controllerMessagesOfsCSystem_act_902505664 == 0);
	__pc := 263;
} or {
	assume ((__trans == true) && (__pc == 265));
	assume (eventId_master_controllerMessagesOfsCSystem_act_902505664 == 1);
	controller_done_Out := false;
	__pc := 266;
} or {
	assume ((__trans == true) && (__pc == 266));
	__pc := (if controller_control_In_isActive then 268 else 267);
} or {
	assume ((__trans == true) && (__pc == 268));
	__pc := (if controller_control_In then 269 else 270);
} or {
	assume ((__trans == true) && (__pc == 269));
	init_to_end := __Empty__;
	end_to_fin := __Empty__;
	init := __Running__;
	end := __Idle__;
	fin := __Idle__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume (DoActivity == __Running__);
	DoActivity := __Done__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume ((end_to_fin == __Full__) && (fin == __Idle__));
	end_to_fin := __Empty__;
	fin := __Running__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume (fin == __Running__);
	fin := __Done__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume ((init_to_end == __Full__) && (end == __Idle__));
	init_to_end := __Empty__;
	end := __Running__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume ((end_to_fin == __Empty__) && (end == __Done__));
	end_to_fin := __Full__;
	end := __Idle__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume (end == __Running__);
	controller_done_Out := true;
	end := __Done__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume ((init_to_end == __Empty__) && (init == __Done__));
	init_to_end := __Full__;
	init := __Idle__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 270));
	assume (init == __Running__);
	init := __Done__;
	__pc := 267;
} or {
	assume ((__trans == true) && (__pc == 267));
	controller_control_In := false;
	controller_control_In_isActive := false;
	__pc := 263;
} or {
	assume ((__trans == true) && (__pc == 263));
	__pc := (if (0 < sizeMasterTraceMessageQueueOfTrace) then 272 else 271);
} or {
	assume ((__trans == true) && (__pc == 272));
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	master_TraceMessageQueueOfTrace := 0;
	sizeMasterTraceMessageQueueOfTrace := (sizeMasterTraceMessageQueueOfTrace - 1);
	__pc := 273;
} or {
	assume ((__trans == true) && (__pc == 273));
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 0);
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 273));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 1);
	testControl_start_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 274;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 276;
} or {
	assume ((__trans == true) && (__pc == 276));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 278 else 277);
} or {
	assume ((__trans == true) && (__pc == 278));
	logs_Trace_Trace := Exit_InputState;
	__pc := 277;
} or {
	assume ((__trans == true) && (__pc == 277));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 279;
} or {
	assume ((__trans == true) && (__pc == 279));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 281 else 280);
} or {
	assume ((__trans == true) && (__pc == 281));
	logs_Trace_Trace := Exit_InputState;
	__pc := 280;
} or {
	assume ((__trans == true) && (__pc == 280));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 282;
} or {
	assume ((__trans == true) && (__pc == 282));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 284 else 283);
} or {
	assume ((__trans == true) && (__pc == 284));
	logs_Trace_Trace := Exit_InputState;
	__pc := 283;
} or {
	assume ((__trans == true) && (__pc == 283));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 285;
} or {
	assume ((__trans == true) && (__pc == 285));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 287 else 286);
} or {
	assume ((__trans == true) && (__pc == 287));
	logs_Trace_Trace := Exit_InputState;
	__pc := 286;
} or {
	assume ((__trans == true) && (__pc == 286));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 288;
} or {
	assume ((__trans == true) && (__pc == 288));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 290 else 289);
} or {
	assume ((__trans == true) && (__pc == 290));
	logs_Trace_Trace := Exit_InputState;
	__pc := 289;
} or {
	assume ((__trans == true) && (__pc == 289));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 291;
} or {
	assume ((__trans == true) && (__pc == 291));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 293 else 292);
} or {
	assume ((__trans == true) && (__pc == 293));
	logs_Trace_Trace := Exit_InputState;
	__pc := 292;
} or {
	assume ((__trans == true) && (__pc == 292));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 274));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 275;
} or {
	assume ((__trans == true) && (__pc == 275));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 295 else 294);
} or {
	assume ((__trans == true) && (__pc == 295));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 297 else 296);
} or {
	assume ((__trans == true) && (__pc == 297));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 296;
} or {
	assume ((__trans == true) && (__pc == 296));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 294;
} or {
	assume ((__trans == true) && (__pc == 294));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 273));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 2);
	control_continue_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 298;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 300;
} or {
	assume ((__trans == true) && (__pc == 300));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 302 else 301);
} or {
	assume ((__trans == true) && (__pc == 302));
	logs_Trace_Trace := Exit_InputState;
	__pc := 301;
} or {
	assume ((__trans == true) && (__pc == 301));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 303;
} or {
	assume ((__trans == true) && (__pc == 303));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 305 else 304);
} or {
	assume ((__trans == true) && (__pc == 305));
	logs_Trace_Trace := Exit_InputState;
	__pc := 304;
} or {
	assume ((__trans == true) && (__pc == 304));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 306;
} or {
	assume ((__trans == true) && (__pc == 306));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 308 else 307);
} or {
	assume ((__trans == true) && (__pc == 308));
	logs_Trace_Trace := Exit_InputState;
	__pc := 307;
} or {
	assume ((__trans == true) && (__pc == 307));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 309;
} or {
	assume ((__trans == true) && (__pc == 309));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 311 else 310);
} or {
	assume ((__trans == true) && (__pc == 311));
	logs_Trace_Trace := Exit_InputState;
	__pc := 310;
} or {
	assume ((__trans == true) && (__pc == 310));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 312;
} or {
	assume ((__trans == true) && (__pc == 312));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 314 else 313);
} or {
	assume ((__trans == true) && (__pc == 314));
	logs_Trace_Trace := Exit_InputState;
	__pc := 313;
} or {
	assume ((__trans == true) && (__pc == 313));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 315;
} or {
	assume ((__trans == true) && (__pc == 315));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 317 else 316);
} or {
	assume ((__trans == true) && (__pc == 317));
	logs_Trace_Trace := Exit_InputState;
	__pc := 316;
} or {
	assume ((__trans == true) && (__pc == 316));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 298));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 299;
} or {
	assume ((__trans == true) && (__pc == 299));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 319 else 318);
} or {
	assume ((__trans == true) && (__pc == 319));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 321 else 320);
} or {
	assume ((__trans == true) && (__pc == 321));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 320;
} or {
	assume ((__trans == true) && (__pc == 320));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 318;
} or {
	assume ((__trans == true) && (__pc == 318));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 273));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 3);
	control_anotherSignal_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 322;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 324;
} or {
	assume ((__trans == true) && (__pc == 324));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 326 else 325);
} or {
	assume ((__trans == true) && (__pc == 326));
	logs_Trace_Trace := Exit_InputState;
	__pc := 325;
} or {
	assume ((__trans == true) && (__pc == 325));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 327;
} or {
	assume ((__trans == true) && (__pc == 327));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 329 else 328);
} or {
	assume ((__trans == true) && (__pc == 329));
	logs_Trace_Trace := Exit_InputState;
	__pc := 328;
} or {
	assume ((__trans == true) && (__pc == 328));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 330;
} or {
	assume ((__trans == true) && (__pc == 330));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 332 else 331);
} or {
	assume ((__trans == true) && (__pc == 332));
	logs_Trace_Trace := Exit_InputState;
	__pc := 331;
} or {
	assume ((__trans == true) && (__pc == 331));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 333;
} or {
	assume ((__trans == true) && (__pc == 333));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 335 else 334);
} or {
	assume ((__trans == true) && (__pc == 335));
	logs_Trace_Trace := Exit_InputState;
	__pc := 334;
} or {
	assume ((__trans == true) && (__pc == 334));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 336;
} or {
	assume ((__trans == true) && (__pc == 336));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 338 else 337);
} or {
	assume ((__trans == true) && (__pc == 338));
	logs_Trace_Trace := Exit_InputState;
	__pc := 337;
} or {
	assume ((__trans == true) && (__pc == 337));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 339;
} or {
	assume ((__trans == true) && (__pc == 339));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 341 else 340);
} or {
	assume ((__trans == true) && (__pc == 341));
	logs_Trace_Trace := Exit_InputState;
	__pc := 340;
} or {
	assume ((__trans == true) && (__pc == 340));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 322));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 323;
} or {
	assume ((__trans == true) && (__pc == 323));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 343 else 342);
} or {
	assume ((__trans == true) && (__pc == 343));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 345 else 344);
} or {
	assume ((__trans == true) && (__pc == 345));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 344;
} or {
	assume ((__trans == true) && (__pc == 344));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 342;
} or {
	assume ((__trans == true) && (__pc == 342));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 273));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 4);
	control_pending_In_Trace_Trace := true;
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 346;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 348;
} or {
	assume ((__trans == true) && (__pc == 348));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 350 else 349);
} or {
	assume ((__trans == true) && (__pc == 350));
	logs_Trace_Trace := Exit_InputState;
	__pc := 349;
} or {
	assume ((__trans == true) && (__pc == 349));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 351;
} or {
	assume ((__trans == true) && (__pc == 351));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 353 else 352);
} or {
	assume ((__trans == true) && (__pc == 353));
	logs_Trace_Trace := Exit_InputState;
	__pc := 352;
} or {
	assume ((__trans == true) && (__pc == 352));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 354;
} or {
	assume ((__trans == true) && (__pc == 354));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 356 else 355);
} or {
	assume ((__trans == true) && (__pc == 356));
	logs_Trace_Trace := Exit_InputState;
	__pc := 355;
} or {
	assume ((__trans == true) && (__pc == 355));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 357;
} or {
	assume ((__trans == true) && (__pc == 357));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 359 else 358);
} or {
	assume ((__trans == true) && (__pc == 359));
	logs_Trace_Trace := Exit_InputState;
	__pc := 358;
} or {
	assume ((__trans == true) && (__pc == 358));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 360;
} or {
	assume ((__trans == true) && (__pc == 360));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 362 else 361);
} or {
	assume ((__trans == true) && (__pc == 362));
	logs_Trace_Trace := Exit_InputState;
	__pc := 361;
} or {
	assume ((__trans == true) && (__pc == 361));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 363;
} or {
	assume ((__trans == true) && (__pc == 363));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 365 else 364);
} or {
	assume ((__trans == true) && (__pc == 365));
	logs_Trace_Trace := Exit_InputState;
	__pc := 364;
} or {
	assume ((__trans == true) && (__pc == 364));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 346));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 347;
} or {
	assume ((__trans == true) && (__pc == 347));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 367 else 366);
} or {
	assume ((__trans == true) && (__pc == 367));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 369 else 368);
} or {
	assume ((__trans == true) && (__pc == 369));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 368;
} or {
	assume ((__trans == true) && (__pc == 368));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 366;
} or {
	assume ((__trans == true) && (__pc == 366));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 273));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 5);
	control_data_In_Trace_Trace := true;
	control_data_In_value_Trace_Trace := slave_control_valueOfTrace;
	slave_control_valueOfTrace := false;
	sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace - 1);
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 370;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 372;
} or {
	assume ((__trans == true) && (__pc == 372));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 374 else 373);
} or {
	assume ((__trans == true) && (__pc == 374));
	logs_Trace_Trace := Exit_InputState;
	__pc := 373;
} or {
	assume ((__trans == true) && (__pc == 373));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 375;
} or {
	assume ((__trans == true) && (__pc == 375));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 377 else 376);
} or {
	assume ((__trans == true) && (__pc == 377));
	logs_Trace_Trace := Exit_InputState;
	__pc := 376;
} or {
	assume ((__trans == true) && (__pc == 376));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 378;
} or {
	assume ((__trans == true) && (__pc == 378));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 380 else 379);
} or {
	assume ((__trans == true) && (__pc == 380));
	logs_Trace_Trace := Exit_InputState;
	__pc := 379;
} or {
	assume ((__trans == true) && (__pc == 379));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 381;
} or {
	assume ((__trans == true) && (__pc == 381));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 383 else 382);
} or {
	assume ((__trans == true) && (__pc == 383));
	logs_Trace_Trace := Exit_InputState;
	__pc := 382;
} or {
	assume ((__trans == true) && (__pc == 382));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 384;
} or {
	assume ((__trans == true) && (__pc == 384));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 386 else 385);
} or {
	assume ((__trans == true) && (__pc == 386));
	logs_Trace_Trace := Exit_InputState;
	__pc := 385;
} or {
	assume ((__trans == true) && (__pc == 385));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 387;
} or {
	assume ((__trans == true) && (__pc == 387));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 389 else 388);
} or {
	assume ((__trans == true) && (__pc == 389));
	logs_Trace_Trace := Exit_InputState;
	__pc := 388;
} or {
	assume ((__trans == true) && (__pc == 388));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 370));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 371;
} or {
	assume ((__trans == true) && (__pc == 371));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 391 else 390);
} or {
	assume ((__trans == true) && (__pc == 391));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 393 else 392);
} or {
	assume ((__trans == true) && (__pc == 393));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 392;
} or {
	assume ((__trans == true) && (__pc == 392));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 390;
} or {
	assume ((__trans == true) && (__pc == 390));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 273));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195460 == 6);
	control_integerData_In_Trace_Trace := true;
	control_integerData_In_value_Trace_Trace := slave_control_valueOfTrace;
	slave_control_valueOfTrace := 0;
	sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace - 1);
	_control__integerData_Out_Trace_Trace := false;
	_control__data_Out_value_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__integerData_Out_value_Trace_Trace := 0;
	_control__anotherSignal_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	__pc := 394;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 396;
} or {
	assume ((__trans == true) && (__pc == 396));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 398 else 397);
} or {
	assume ((__trans == true) && (__pc == 398));
	logs_Trace_Trace := Exit_InputState;
	__pc := 397;
} or {
	assume ((__trans == true) && (__pc == 397));
	_control__continue_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 399;
} or {
	assume ((__trans == true) && (__pc == 399));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 401 else 400);
} or {
	assume ((__trans == true) && (__pc == 401));
	logs_Trace_Trace := Exit_InputState;
	__pc := 400;
} or {
	assume ((__trans == true) && (__pc == 400));
	_control__anotherSignal_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 402;
} or {
	assume ((__trans == true) && (__pc == 402));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 404 else 403);
} or {
	assume ((__trans == true) && (__pc == 404));
	logs_Trace_Trace := Exit_InputState;
	__pc := 403;
} or {
	assume ((__trans == true) && (__pc == 403));
	_control__pending_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 405;
} or {
	assume ((__trans == true) && (__pc == 405));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 407 else 406);
} or {
	assume ((__trans == true) && (__pc == 407));
	logs_Trace_Trace := Exit_InputState;
	__pc := 406;
} or {
	assume ((__trans == true) && (__pc == 406));
	_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
	_control__data_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 408;
} or {
	assume ((__trans == true) && (__pc == 408));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 410 else 409);
} or {
	assume ((__trans == true) && (__pc == 410));
	logs_Trace_Trace := Exit_InputState;
	__pc := 409;
} or {
	assume ((__trans == true) && (__pc == 409));
	_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
	_control__integerData_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
	__pc := 411;
} or {
	assume ((__trans == true) && (__pc == 411));
	__pc := (if (inputRegion_Trace_Trace == InputState) then 413 else 412);
} or {
	assume ((__trans == true) && (__pc == 413));
	logs_Trace_Trace := Exit_InputState;
	__pc := 412;
} or {
	assume ((__trans == true) && (__pc == 412));
	_testControl__start_Out_Trace_Trace := true;
	inputRegion_Trace_Trace := InputState;
	logs_Trace_Trace := Entry_InputState;
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 394));
	assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
	__pc := 395;
} or {
	assume ((__trans == true) && (__pc == 395));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 415 else 414);
} or {
	assume ((__trans == true) && (__pc == 415));
	__pc := (if (inOutCycleRegion_Trace_Trace == InOutCycleState) then 417 else 416);
} or {
	assume ((__trans == true) && (__pc == 417));
	logs_Trace_Trace := Exit_InOutCycleState;
	__pc := 416;
} or {
	assume ((__trans == true) && (__pc == 416));
	inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_Trace_Trace := Entry_InOutCycleState;
	__pc := 414;
} or {
	assume ((__trans == true) && (__pc == 414));
	control_pending_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	control_data_In_value_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_integerData_In_value_Trace_Trace := 0;
	eventId_master_TraceMessageQueueOfTrace_10473195460 := master_TraceMessageQueueOfTrace;
	control_integerData_In_Trace_Trace := false;
	__pc := 271;
} or {
	assume ((__trans == true) && (__pc == 271));
	__pc := (if _testControl__start_Out_Trace_Trace then 419 else 418);
} or {
	assume ((__trans == true) && (__pc == 419));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 421 else 420);
} or {
	assume ((__trans == true) && (__pc == 421));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 1;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 420;
} or {
	assume ((__trans == true) && (__pc == 420));
	_testControl__start_Out_Trace_Trace := false;
	__pc := 418;
} or {
	assume ((__trans == true) && (__pc == 418));
	__pc := (if _control__continue_Out_Trace_Trace then 423 else 422);
} or {
	assume ((__trans == true) && (__pc == 423));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 425 else 424);
} or {
	assume ((__trans == true) && (__pc == 425));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 2;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 424;
} or {
	assume ((__trans == true) && (__pc == 424));
	_control__continue_Out_Trace_Trace := false;
	__pc := 422;
} or {
	assume ((__trans == true) && (__pc == 422));
	__pc := (if _control__anotherSignal_Out_Trace_Trace then 427 else 426);
} or {
	assume ((__trans == true) && (__pc == 427));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 429 else 428);
} or {
	assume ((__trans == true) && (__pc == 429));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 3;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 428;
} or {
	assume ((__trans == true) && (__pc == 428));
	_control__anotherSignal_Out_Trace_Trace := false;
	__pc := 426;
} or {
	assume ((__trans == true) && (__pc == 426));
	__pc := (if _control__pending_Out_Trace_Trace then 431 else 430);
} or {
	assume ((__trans == true) && (__pc == 431));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 433 else 432);
} or {
	assume ((__trans == true) && (__pc == 433));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 4;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 432;
} or {
	assume ((__trans == true) && (__pc == 432));
	_control__pending_Out_Trace_Trace := false;
	__pc := 430;
} or {
	assume ((__trans == true) && (__pc == 430));
	__pc := (if _control__data_Out_Trace_Trace then 435 else 434);
} or {
	assume ((__trans == true) && (__pc == 435));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 437 else 436);
} or {
	assume ((__trans == true) && (__pc == 437));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 5;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 436;
} or {
	assume ((__trans == true) && (__pc == 436));
	_control__data_Out_Trace_Trace := false;
	__pc := 434;
} or {
	assume ((__trans == true) && (__pc == 434));
	__pc := (if _control__integerData_Out_Trace_Trace then 438 else 0);
} or {
	assume ((__trans == true) && (__pc == 438));
	__pc := (if (sizeMasterSCMessageQueueOfsCSystem_sc < 4) then 440 else 439);
} or {
	assume ((__trans == true) && (__pc == 440));
	master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 6;
	sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
	__pc := 439;
} or {
	assume ((__trans == true) && (__pc == 439));
	_control__integerData_Out_Trace_Trace := false;
	__pc := 0;
	__trans := false;
} or {
	assume ((__trans == false) && (__pc == 0));
	__pc := (if (sizeMasterTraceMessageQueueOfTrace <= 0) then 2 else 1);
} or {
	assume ((__trans == false) && (__pc == 2));
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	havoc eventId_master_TraceMessageQueueOfTrace_10473195461;
	__pc := 3;
} or {
	assume ((__trans == false) && (__pc == 3));
	__pc := (if ((0 < eventId_master_TraceMessageQueueOfTrace_10473195461) && (eventId_master_TraceMessageQueueOfTrace_10473195461 <= 6)) then 4 else 1);
} or {
	assume ((__trans == false) && (__pc == 4));
	master_TraceMessageQueueOfTrace := eventId_master_TraceMessageQueueOfTrace_10473195461;
	sizeMasterTraceMessageQueueOfTrace := (sizeMasterTraceMessageQueueOfTrace + 1);
	__pc := 5;
} or {
	assume ((__trans == false) && (__pc == 5));
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	assume (eventId_master_TraceMessageQueueOfTrace_10473195461 == 2);
	__pc := 1;
} or {
	assume ((__trans == false) && (__pc == 5));
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	assume (eventId_master_TraceMessageQueueOfTrace_10473195461 == 4);
	__pc := 1;
} or {
	assume ((__trans == false) && (__pc == 5));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195461 == 6);
	local var random_slave_control_valueOfTrace_2041098493 : integer;
	havoc random_slave_control_valueOfTrace_2041098493;
	slave_control_valueOfTrace := random_slave_control_valueOfTrace_2041098493;
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace + 1);
	__pc := 1;
} or {
	assume ((__trans == false) && (__pc == 5));
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	assume (eventId_master_TraceMessageQueueOfTrace_10473195461 == 1);
	__pc := 1;
} or {
	assume ((__trans == false) && (__pc == 5));
	assume (eventId_master_TraceMessageQueueOfTrace_10473195461 == 5);
	local var random_slave_control_valueOfTrace_2102804940 : boolean;
	havoc random_slave_control_valueOfTrace_2102804940;
	slave_control_valueOfTrace := random_slave_control_valueOfTrace_2102804940;
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace + 1);
	__pc := 1;
} or {
	assume ((__trans == false) && (__pc == 5));
	eventId_master_TraceMessageQueueOfTrace_10473195461 := 0;
	assume (eventId_master_TraceMessageQueueOfTrace_10473195461 == 3);
	__pc := 1;
} or {
	assume ((__trans == false) && (__pc == 1));
	__pc := 0;
	__trans := true;
}
init {
	inOutCycleVariable_Trace_Trace := false;
	mainRegion_Trace_Trace := __Inactive__;
	inOutCycleRegion_Trace_Trace := __Inactive__;
	outputRegion_Trace_Trace := __Inactive__;
	inputRegion_Trace_Trace := __Inactive__;
	control_integerData_In_Trace_Trace := false;
	control_continue_In_Trace_Trace := false;
	control_data_In_Trace_Trace := false;
	testControl_start_In_Trace_Trace := false;
	control_pending_In_Trace_Trace := false;
	control_anotherSignal_In_Trace_Trace := false;
	_control__anotherSignal_Out_Trace_Trace := false;
	_control__integerData_Out_Trace_Trace := false;
	_control__continue_Out_Trace_Trace := false;
	_control__pending_Out_Trace_Trace := false;
	_testControl__start_Out_Trace_Trace := false;
	_control__data_Out_Trace_Trace := false;
	main_sCSystem_sc_SC := __Inactive__;
	testControl_start_In_sCSystem_sc_SC := false;
	doActivityController_done_In_sCSystem_sc_SC := false;
	control_anotherSignal_In_sCSystem_sc_SC := false;
	doActivityController_control_Out_sCSystem_sc_SC := false;
	slave_control_valueOfTrace := false;
	master_SCMessageQueueOfsCSystem_sc := [0 <- 0, 1 <- 0, 2 <- 0, 3 <- 0, default <- 0];
	sizeMasterSCMessageQueueOfsCSystem_sc := 0;
	master_controllerMessagesOfsCSystem_act := 0;
	sizeMasterControllerMessagesOfsCSystem_act := 0;
	master_TraceMessageQueueOfTrace := 0;
	sizeMasterTraceMessageQueueOfTrace := 0;
	slave_control_valueOfTrace := 0;
	sizeSlaveValueControlOfTrace := 0;
	mainRegion_Trace_Trace := _0;
	inputRegion_Trace_Trace := InputState;
	outputRegion_Trace_Trace := FirstOutputState;
	logs_Trace_Trace := InOutCycleInitialState___InOutCycleState;
	inOutCycleRegion_Trace_Trace := InOutCycleState;
	logs_sCSystem_sc_SC := Initial___Wait;
	main_sCSystem_sc_SC := Wait;
	if ((mainRegion_Trace_Trace == _0)) {
		logs_Trace_Trace := Entry__0;
		if ((inputRegion_Trace_Trace == InputState)) {
			logs_Trace_Trace := Entry_InputState;
		}
	}
	if ((outputRegion_Trace_Trace == OutputState)) {
		logs_Trace_Trace := Entry_OutputState;
	}
	else {
		if ((outputRegion_Trace_Trace == FirstOutputState)) {
			logs_Trace_Trace := Entry_FirstOutputState;
		}
	}
	if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
		logs_Trace_Trace := Entry_InOutCycleState;
	}
	if ((main_sCSystem_sc_SC == Wait)) {
		logs_sCSystem_sc_SC := Entry_Wait;
	}
	else {
		if ((main_sCSystem_sc_SC == S1)) {
			logs_sCSystem_sc_SC := Entry_S1;
			doActivityController_control_Out_isActive_sCSystem_sc_SC := true;
			doActivityController_control_Out_sCSystem_sc_SC := true;
		}
		else {
			if ((main_sCSystem_sc_SC == Error)) {
				logs_sCSystem_sc_SC := Entry_Error;
			}
			else {
				if ((main_sCSystem_sc_SC == FS1)) {
					logs_sCSystem_sc_SC := Entry_FS1;
				}
			}
		}
	}
	if (_testControl__start_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 1;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_testControl__start_Out_Trace_Trace := false;
	}
	if (_control__continue_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 2;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__continue_Out_Trace_Trace := false;
	}
	if (_control__anotherSignal_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 3;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__anotherSignal_Out_Trace_Trace := false;
	}
	if (_control__pending_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 4;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__pending_Out_Trace_Trace := false;
	}
	if (_control__data_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 5;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__data_Out_Trace_Trace := false;
	}
	if (_control__integerData_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 6;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__integerData_Out_Trace_Trace := false;
	}
	if (doActivityController_control_Out_sCSystem_sc_SC) {
		if ((sizeMasterControllerMessagesOfsCSystem_act < 1)) {
			master_controllerMessagesOfsCSystem_act := 1;
			sizeMasterControllerMessagesOfsCSystem_act := (sizeMasterControllerMessagesOfsCSystem_act + 1);
		}
		doActivityController_control_Out_sCSystem_sc_SC := false;
	}
	if (_testControl__start_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 1;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_testControl__start_Out_Trace_Trace := false;
	}
	if (_control__continue_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 2;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__continue_Out_Trace_Trace := false;
	}
	if (_control__anotherSignal_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 3;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__anotherSignal_Out_Trace_Trace := false;
	}
	if (_control__pending_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 4;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__pending_Out_Trace_Trace := false;
	}
	if (_control__data_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 5;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__data_Out_Trace_Trace := false;
	}
	if (_control__integerData_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 6;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__integerData_Out_Trace_Trace := false;
	}
	if ((0 < sizeMasterTraceMessageQueueOfTrace)) {
		local var eventId_master_TraceMessageQueueOfTrace_1047319546 : integer = master_TraceMessageQueueOfTrace;
		master_TraceMessageQueueOfTrace := 0;
		sizeMasterTraceMessageQueueOfTrace := (sizeMasterTraceMessageQueueOfTrace - 1);
		choice {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 0);
		} or {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 1);
			testControl_start_In_Trace_Trace := true;
			_control__integerData_Out_Trace_Trace := false;
			_control__data_Out_value_Trace_Trace := false;
			_control__continue_Out_Trace_Trace := false;
			_control__integerData_Out_value_Trace_Trace := 0;
			_control__anotherSignal_Out_Trace_Trace := false;
			_testControl__start_Out_Trace_Trace := false;
			_control__data_Out_Trace_Trace := false;
			_control__pending_Out_Trace_Trace := false;
			choice {
				assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__continue_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__anotherSignal_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__pending_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
				_control__data_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
				_control__integerData_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_testControl__start_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
			}
			if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
				if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
					logs_Trace_Trace := Exit_InOutCycleState;
				}
				inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
				inOutCycleRegion_Trace_Trace := InOutCycleState;
				logs_Trace_Trace := Entry_InOutCycleState;
			}
			control_pending_In_Trace_Trace := false;
			testControl_start_In_Trace_Trace := false;
			control_anotherSignal_In_Trace_Trace := false;
			control_data_In_Trace_Trace := false;
			control_data_In_value_Trace_Trace := false;
			control_continue_In_Trace_Trace := false;
			control_integerData_In_value_Trace_Trace := 0;
			control_integerData_In_Trace_Trace := false;
		} or {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 2);
			control_continue_In_Trace_Trace := true;
			_control__integerData_Out_Trace_Trace := false;
			_control__data_Out_value_Trace_Trace := false;
			_control__continue_Out_Trace_Trace := false;
			_control__integerData_Out_value_Trace_Trace := 0;
			_control__anotherSignal_Out_Trace_Trace := false;
			_testControl__start_Out_Trace_Trace := false;
			_control__data_Out_Trace_Trace := false;
			_control__pending_Out_Trace_Trace := false;
			choice {
				assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__continue_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__anotherSignal_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__pending_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
				_control__data_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
				_control__integerData_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_testControl__start_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
			}
			if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
				if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
					logs_Trace_Trace := Exit_InOutCycleState;
				}
				inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
				inOutCycleRegion_Trace_Trace := InOutCycleState;
				logs_Trace_Trace := Entry_InOutCycleState;
			}
			control_pending_In_Trace_Trace := false;
			testControl_start_In_Trace_Trace := false;
			control_anotherSignal_In_Trace_Trace := false;
			control_data_In_Trace_Trace := false;
			control_data_In_value_Trace_Trace := false;
			control_continue_In_Trace_Trace := false;
			control_integerData_In_value_Trace_Trace := 0;
			control_integerData_In_Trace_Trace := false;
		} or {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 3);
			control_anotherSignal_In_Trace_Trace := true;
			_control__integerData_Out_Trace_Trace := false;
			_control__data_Out_value_Trace_Trace := false;
			_control__continue_Out_Trace_Trace := false;
			_control__integerData_Out_value_Trace_Trace := 0;
			_control__anotherSignal_Out_Trace_Trace := false;
			_testControl__start_Out_Trace_Trace := false;
			_control__data_Out_Trace_Trace := false;
			_control__pending_Out_Trace_Trace := false;
			choice {
				assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__continue_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__anotherSignal_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__pending_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
				_control__data_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
				_control__integerData_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_testControl__start_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
			}
			if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
				if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
					logs_Trace_Trace := Exit_InOutCycleState;
				}
				inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
				inOutCycleRegion_Trace_Trace := InOutCycleState;
				logs_Trace_Trace := Entry_InOutCycleState;
			}
			control_pending_In_Trace_Trace := false;
			testControl_start_In_Trace_Trace := false;
			control_anotherSignal_In_Trace_Trace := false;
			control_data_In_Trace_Trace := false;
			control_data_In_value_Trace_Trace := false;
			control_continue_In_Trace_Trace := false;
			control_integerData_In_value_Trace_Trace := 0;
			control_integerData_In_Trace_Trace := false;
		} or {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 4);
			control_pending_In_Trace_Trace := true;
			_control__integerData_Out_Trace_Trace := false;
			_control__data_Out_value_Trace_Trace := false;
			_control__continue_Out_Trace_Trace := false;
			_control__integerData_Out_value_Trace_Trace := 0;
			_control__anotherSignal_Out_Trace_Trace := false;
			_testControl__start_Out_Trace_Trace := false;
			_control__data_Out_Trace_Trace := false;
			_control__pending_Out_Trace_Trace := false;
			choice {
				assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__continue_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__anotherSignal_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__pending_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
				_control__data_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
				_control__integerData_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_testControl__start_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
			}
			if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
				if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
					logs_Trace_Trace := Exit_InOutCycleState;
				}
				inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
				inOutCycleRegion_Trace_Trace := InOutCycleState;
				logs_Trace_Trace := Entry_InOutCycleState;
			}
			control_pending_In_Trace_Trace := false;
			testControl_start_In_Trace_Trace := false;
			control_anotherSignal_In_Trace_Trace := false;
			control_data_In_Trace_Trace := false;
			control_data_In_value_Trace_Trace := false;
			control_continue_In_Trace_Trace := false;
			control_integerData_In_value_Trace_Trace := 0;
			control_integerData_In_Trace_Trace := false;
		} or {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 5);
			control_data_In_Trace_Trace := true;
			control_data_In_value_Trace_Trace := slave_control_valueOfTrace;
			slave_control_valueOfTrace := false;
			sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace - 1);
			_control__integerData_Out_Trace_Trace := false;
			_control__data_Out_value_Trace_Trace := false;
			_control__continue_Out_Trace_Trace := false;
			_control__integerData_Out_value_Trace_Trace := 0;
			_control__anotherSignal_Out_Trace_Trace := false;
			_testControl__start_Out_Trace_Trace := false;
			_control__data_Out_Trace_Trace := false;
			_control__pending_Out_Trace_Trace := false;
			choice {
				assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__continue_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__anotherSignal_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__pending_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
				_control__data_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
				_control__integerData_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_testControl__start_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
			}
			if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
				if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
					logs_Trace_Trace := Exit_InOutCycleState;
				}
				inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
				inOutCycleRegion_Trace_Trace := InOutCycleState;
				logs_Trace_Trace := Entry_InOutCycleState;
			}
			control_pending_In_Trace_Trace := false;
			testControl_start_In_Trace_Trace := false;
			control_anotherSignal_In_Trace_Trace := false;
			control_data_In_Trace_Trace := false;
			control_data_In_value_Trace_Trace := false;
			control_continue_In_Trace_Trace := false;
			control_integerData_In_value_Trace_Trace := 0;
			control_integerData_In_Trace_Trace := false;
		} or {
			assume (eventId_master_TraceMessageQueueOfTrace_1047319546 == 6);
			control_integerData_In_Trace_Trace := true;
			control_integerData_In_value_Trace_Trace := slave_control_valueOfTrace;
			slave_control_valueOfTrace := 0;
			sizeSlaveValueControlOfTrace := (sizeSlaveValueControlOfTrace - 1);
			_control__integerData_Out_Trace_Trace := false;
			_control__data_Out_value_Trace_Trace := false;
			_control__continue_Out_Trace_Trace := false;
			_control__integerData_Out_value_Trace_Trace := 0;
			_control__anotherSignal_Out_Trace_Trace := false;
			_testControl__start_Out_Trace_Trace := false;
			_control__data_Out_Trace_Trace := false;
			_control__pending_Out_Trace_Trace := false;
			choice {
				assume ((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__continue_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__anotherSignal_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__pending_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__data_Out_value_Trace_Trace := control_data_In_value_Trace_Trace;
				_control__data_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_control__integerData_Out_value_Trace_Trace := control_integerData_In_value_Trace_Trace;
				_control__integerData_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace);
				if ((inputRegion_Trace_Trace == InputState)) {
					logs_Trace_Trace := Exit_InputState;
				}
				_testControl__start_Out_Trace_Trace := true;
				inputRegion_Trace_Trace := InputState;
				logs_Trace_Trace := Entry_InputState;
			} or {
				assume (!((((inputRegion_Trace_Trace == InputState) && control_continue_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_anotherSignal_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_pending_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_data_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && control_integerData_In_Trace_Trace && inOutCycleVariable_Trace_Trace) || ((inputRegion_Trace_Trace == InputState) && testControl_start_In_Trace_Trace && inOutCycleVariable_Trace_Trace))));
			}
			if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
				if ((inOutCycleRegion_Trace_Trace == InOutCycleState)) {
					logs_Trace_Trace := Exit_InOutCycleState;
				}
				inOutCycleVariable_Trace_Trace := (!(inOutCycleVariable_Trace_Trace));
				inOutCycleRegion_Trace_Trace := InOutCycleState;
				logs_Trace_Trace := Entry_InOutCycleState;
			}
			control_pending_In_Trace_Trace := false;
			testControl_start_In_Trace_Trace := false;
			control_anotherSignal_In_Trace_Trace := false;
			control_data_In_Trace_Trace := false;
			control_data_In_value_Trace_Trace := false;
			control_continue_In_Trace_Trace := false;
			control_integerData_In_value_Trace_Trace := 0;
			control_integerData_In_Trace_Trace := false;
		}
	}
	if (_testControl__start_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 1;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_testControl__start_Out_Trace_Trace := false;
	}
	if (_control__continue_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 2;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__continue_Out_Trace_Trace := false;
	}
	if (_control__anotherSignal_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 3;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__anotherSignal_Out_Trace_Trace := false;
	}
	if (_control__pending_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 4;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__pending_Out_Trace_Trace := false;
	}
	if (_control__data_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 5;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__data_Out_Trace_Trace := false;
	}
	if (_control__integerData_Out_Trace_Trace) {
		if ((sizeMasterSCMessageQueueOfsCSystem_sc < 4)) {
			master_SCMessageQueueOfsCSystem_sc[sizeMasterSCMessageQueueOfsCSystem_sc] := 6;
			sizeMasterSCMessageQueueOfsCSystem_sc := (sizeMasterSCMessageQueueOfsCSystem_sc + 1);
		}
		_control__integerData_Out_Trace_Trace := false;
	}
}
env {
}

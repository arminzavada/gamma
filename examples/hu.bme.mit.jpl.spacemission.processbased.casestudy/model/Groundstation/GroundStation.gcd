package groundstation

import "Interface/Interfaces.gcd"

activity ReceiveData [
	port dataSource : requires DataSource
] {
	initial Initial
	
	merge Merge
	
	trigger DataPacket when dataSource._data
	
	action ProcessData
	
	control flow from Initial to Merge
	control flow from Merge to DataPacket
	control flow from DataPacket to ProcessData
	control flow from ProcessData to Merge
}

statechart GroundStation [
	port receiveDataController : requires ReceiveData::controller
	port pingSource : requires PingSource
	port stationControl : provides StationControl
] {
	timeout pingTimeout
	timeout autoStart
	
	region Main {
		initial Entry
		state Idle {
			entry / set autoStart := 30s;
		}
		state Operation {
			do / run receiveDataController;
			entry / raise pingSource.ping; set pingTimeout := 10s;
		}
	}
	
	transition from Entry to Idle
	transition from Idle to Operation when stationControl.start
	transition from Idle to Operation when timeout autoStart
	transition from Operation to Operation when timeout pingTimeout
	transition from Operation to Idle when stationControl.shutdown
	
}
